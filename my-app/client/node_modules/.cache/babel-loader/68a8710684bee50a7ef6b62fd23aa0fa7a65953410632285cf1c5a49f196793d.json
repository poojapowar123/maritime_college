{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pooja.Powar\\\\Desktop\\\\maritime\\\\my-app\\\\src\\\\pages\\\\home\\\\programs\\\\Programs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { Card, CardContent, Typography, CardMedia } from \"@mui/material\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./Programs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardsData = [{\n  id: 1,\n  title: \"Program 1\",\n  desc: \"Desc 1\",\n  image: \"https://source.unsplash.com/400x250/?nature,water\"\n}, {\n  id: 2,\n  title: \"Program 2\",\n  desc: \"Desc 2\",\n  image: \"https://source.unsplash.com/400x250/?nature,forest\"\n}, {\n  id: 3,\n  title: \"Program 3\",\n  desc: \"Desc 3\",\n  image: \"https://source.unsplash.com/400x250/?nature,mountain\"\n}, {\n  id: 4,\n  title: \"Program 4\",\n  desc: \"Desc 4\",\n  image: \"https://source.unsplash.com/400x250/?nature,beach\"\n}];\nconst Programs = () => {\n  _s();\n  const [centerIndex, setCenterIndex] = useState(0); // Track first center card\n\n  const settings = {\n    infinite: true,\n    slidesToShow: 4,\n    centerMode: true,\n    autoplay: true,\n    afterChange: current => setCenterIndex(current) // Update center index\n  };\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    ...settings,\n    children: cardsData.map((card, index) => {\n      let className = \"program-card-wrapper\";\n\n      // First center card\n      if (index === centerIndex) className += \" first-center\";\n      // Second center card (next slide)\n      if (index === (centerIndex + 1) % cardsData.length) className += \" second-center\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"program-card\",\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            image: card.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: card.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Programs, \"mJfSO0VJLkC3eBQ68gkqiCE6VzI=\");\n_c = Programs;\nexport default Programs;\nvar _c;\n$RefreshReg$(_c, \"Programs\");","map":{"version":3,"names":["React","useState","Slider","Card","CardContent","Typography","CardMedia","jsxDEV","_jsxDEV","cardsData","id","title","desc","image","Programs","_s","centerIndex","setCenterIndex","settings","infinite","slidesToShow","centerMode","autoplay","afterChange","current","children","map","card","index","className","length","component","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["C:/Users/Pooja.Powar/Desktop/maritime/my-app/src/pages/home/programs/Programs.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { Card, CardContent, Typography, CardMedia } from \"@mui/material\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./Programs.css\";\r\n\r\nconst cardsData = [\r\n  { id: 1, title: \"Program 1\", desc: \"Desc 1\", image: \"https://source.unsplash.com/400x250/?nature,water\" },\r\n  { id: 2, title: \"Program 2\", desc: \"Desc 2\", image: \"https://source.unsplash.com/400x250/?nature,forest\" },\r\n  { id: 3, title: \"Program 3\", desc: \"Desc 3\", image: \"https://source.unsplash.com/400x250/?nature,mountain\" },\r\n  { id: 4, title: \"Program 4\", desc: \"Desc 4\", image: \"https://source.unsplash.com/400x250/?nature,beach\" },\r\n];\r\n\r\nconst Programs = () => {\r\n  const [centerIndex, setCenterIndex] = useState(0); // Track first center card\r\n\r\n  const settings = {\r\n    infinite: true,\r\n    slidesToShow: 4,\r\n    centerMode: true,\r\n    autoplay: true,\r\n    afterChange: (current) => setCenterIndex(current), // Update center index\r\n  };\r\n\r\n  return (\r\n    <Slider {...settings}>\r\n      {cardsData.map((card, index) => {\r\n        let className = \"program-card-wrapper\";\r\n\r\n        // First center card\r\n        if (index === centerIndex) className += \" first-center\";\r\n        // Second center card (next slide)\r\n        if (index === (centerIndex + 1) % cardsData.length) className += \" second-center\";\r\n\r\n        return (\r\n          <div key={card.id} className={className}>\r\n            <Card className=\"program-card\">\r\n              <CardMedia component=\"img\" image={card.image} />\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{card.title}</Typography>\r\n                <Typography variant=\"body2\">{card.desc}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        );\r\n      })}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default Programs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}