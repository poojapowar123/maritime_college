{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function Users() {\n//   const [team, setTeam] = useState([]);\n//   const [editingMember, setEditingMember] = useState(null);\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     email: \"\",\n//     role: \"\"\n//   });\n\n//   useEffect(() => {\n//     fetchTeam();\n//   }, []);\n\n//   const fetchTeam = () => {\n//     axios.get(\"http://localhost:5000/users\", { withCredentials: true })\n//       .then((res) => setTeam(res.data));\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (editingMember) {\n//       axios\n//         .put(`http://localhost:5000/users/${editingMember.id}`, formData, { withCredentials: true })\n//         .then((res) => {\n//           alert(res.data.message);\n//           resetForm();\n//           fetchTeam();\n//           setEditingMember(null);\n//         });\n//     } else {\n//       axios\n//         .post(\"http://localhost:5000/users\", formData, { withCredentials: true })\n//         .then((res) => {\n//           alert(res.data.message);\n//           resetForm();\n//           fetchTeam();\n//         });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setFormData({ name: \"\", email: \"\", role: \"\" });\n//   };\n\n//   const handleEdit = (member) => {\n//     setEditingMember(member);\n//     setFormData({\n//       name: member.name,\n//       email: member.email,\n//       role: member.role\n//     });\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this member?\")) {\n//       axios.delete(`http://localhost:5000/users/${id}`, { withCredentials: true })\n//         .then((res) => {\n//           alert(res.data.message);\n//           fetchTeam();\n//         });\n//     }\n//   };\n\n//   return (\n//     <div className=\"team-container\">\n//       <h2>{editingMember ? \"Edit Member\" : \"Add Team Member\"}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>Name:</label>\n//         <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n\n//         <label>Email:</label>\n//         <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n\n//         <label>Role:</label>\n//         <input type=\"text\" name=\"role\" value={formData.role} onChange={handleChange} />\n\n//         <button type=\"submit\">{editingMember ? \"Update Member\" : \"Add Member\"}</button>\n//       </form>\n\n//       <h2>Team Members List</h2>\n//       <table border=\"1\" width=\"100%\" cellPadding=\"10\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {team.length > 0 && team.map((member) => (\n//             <tr key={member.id}>\n//               <td>{member.id}</td>\n//               <td>{member.name}</td>\n//               <td>{member.email}</td>\n//               <td>{member.role}</td>\n//               <td>\n//                 <button onClick={() => handleEdit(member)}>Edit</button>\n//                 <button onClick={() => handleDelete(member.id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n\n//           {team.length === 0 && (\n//             <tr>\n//               <td colSpan=\"5\" align=\"center\">No team members found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default Users;","map":{"version":3,"names":[],"sources":["C:/Users/Pooja.Powar/Desktop/maritime/my-app/client/src/component/form/users.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function Users() {\r\n//   const [team, setTeam] = useState([]);\r\n//   const [editingMember, setEditingMember] = useState(null);\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     role: \"\"\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchTeam();\r\n//   }, []);\r\n\r\n//   const fetchTeam = () => {\r\n//     axios.get(\"http://localhost:5000/users\", { withCredentials: true })\r\n//       .then((res) => setTeam(res.data));\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (editingMember) {\r\n//       axios\r\n//         .put(`http://localhost:5000/users/${editingMember.id}`, formData, { withCredentials: true })\r\n//         .then((res) => {\r\n//           alert(res.data.message);\r\n//           resetForm();\r\n//           fetchTeam();\r\n//           setEditingMember(null);\r\n//         });\r\n//     } else {\r\n//       axios\r\n//         .post(\"http://localhost:5000/users\", formData, { withCredentials: true })\r\n//         .then((res) => {\r\n//           alert(res.data.message);\r\n//           resetForm();\r\n//           fetchTeam();\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setFormData({ name: \"\", email: \"\", role: \"\" });\r\n//   };\r\n\r\n//   const handleEdit = (member) => {\r\n//     setEditingMember(member);\r\n//     setFormData({\r\n//       name: member.name,\r\n//       email: member.email,\r\n//       role: member.role\r\n//     });\r\n//   };\r\n\r\n//   const handleDelete = (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this member?\")) {\r\n//       axios.delete(`http://localhost:5000/users/${id}`, { withCredentials: true })\r\n//         .then((res) => {\r\n//           alert(res.data.message);\r\n//           fetchTeam();\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"team-container\">\r\n//       <h2>{editingMember ? \"Edit Member\" : \"Add Team Member\"}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>Name:</label>\r\n//         <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\r\n\r\n//         <label>Email:</label>\r\n//         <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n\r\n//         <label>Role:</label>\r\n//         <input type=\"text\" name=\"role\" value={formData.role} onChange={handleChange} />\r\n\r\n//         <button type=\"submit\">{editingMember ? \"Update Member\" : \"Add Member\"}</button>\r\n//       </form>\r\n\r\n//       <h2>Team Members List</h2>\r\n//       <table border=\"1\" width=\"100%\" cellPadding=\"10\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//             <th>Role</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {team.length > 0 && team.map((member) => (\r\n//             <tr key={member.id}>\r\n//               <td>{member.id}</td>\r\n//               <td>{member.name}</td>\r\n//               <td>{member.email}</td>\r\n//               <td>{member.role}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleEdit(member)}>Edit</button>\r\n//                 <button onClick={() => handleDelete(member.id)}>Delete</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n\r\n//           {team.length === 0 && (\r\n//             <tr>\r\n//               <td colSpan=\"5\" align=\"center\">No team members found</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Users;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}